class Solution {
public:
    int dx[8] = { 2, 1, -1, -2, -2, -1, 1, 2 };
    int dy[8] = { 1, 2, 2, 1, -1, -2, -2, -1 };
    bool isSafe(int i,int j,int n)
    {
        if((i>=0 && i<=n-1) && (j>=0 && j<=n-1))return true;
        else return false;
    }


   double solve(int n,int k,int row,int col,vector<vector<vector<double>>>& dp)
   {
       if(!isSafe(row,col,n))return 0.0;
       if(k==0)return 1.0;
       if(dp[row][col][k]!=-1)return dp[row][col][k];

       double ans=0;
       for(int i=0;i<8;i++)
       {
           ans += solve(n,k-1,row + dx[i],col + dy[i],dp);
       }
       return dp[row][col][k] = ans/8.0;
   }

    double knightProbability(int n, int k, int row, int col) {
       vector<vector<vector<double>>> dp(26,vector<vector<double>>(26,vector<double>(101,-1)));
       return solve(n,k,row,col,dp);
    }
};
