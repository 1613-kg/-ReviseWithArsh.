class StockPrice {
public:
    map<int,int> m;
    multiset<int> s;
    int last=0,mx=0;
    StockPrice() {
        
    }
    
    void update(int timestamp, int price) {
        if(m.find(timestamp)==m.end()){
             m[timestamp]=price;
             s.insert(price);
        }
        else{
              if(s.count(m[timestamp]))
                s.erase(s.find(m[timestamp]));
            // int x = m[timestamp];
             m[timestamp]=price;
            // auto it1 = s.find(x);
            // //if(it1)
            // s.erase(*it1);
            s.insert(price);
        }
        if(timestamp>=mx){
             last = price;
             mx=timestamp;
        }
       
    }
    
    int current() {
       return last;
    }
    
    int maximum() {
       return *s.rbegin();
      //return 0;
    }
    
    int minimum() {
         return *s.begin();
         //return 0;
    }
};

/**
 * Your StockPrice object will be instantiated and called as such:
 * StockPrice* obj = new StockPrice();
 * obj->update(timestamp,price);
 * int param_2 = obj->current();
 * int param_3 = obj->maximum();
 * int param_4 = obj->minimum();
 */
