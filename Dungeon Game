class Solution {
public:

    int solve(vector<vector<int>>& dun,int i,int j,vector<vector<int>>& dp)
    {
         int n = dun.size(),m=dun[0].size();
        if(i==n || j==m)return 1e9;
        if(i==n-1 && j==m-1){
            return (dun[i][j]<=0) ? -dun[i][j]+1 : 1;
        }

        if(dp[i][j]!=1e9)return dp[i][j];

        int right = solve(dun,i,j+1,dp);
        int down = solve(dun,i+1,j,dp);
         
         int res = min(right, down) - dun[i][j];
        return dp[i][j] = (res<=0) ? 1 : res; 
    }

    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        int n=dungeon.size();
        int m = dungeon[0].size();
        vector<vector<int>> dp(n,vector<int> (m,1e9));
        return solve(dungeon,0,0,dp);
    }
};
