class Solution {
public:

    vector<int> largestDivisibleSubset(vector<int>& a) {
       int n = a.size();
       vector<int> dp(n+1,1);
       int mx=1;
       sort(a.begin(),a.end());
       for(int i=1;i<n;i++)
       {
           for(int j=0;j<i;j++)
           {
               if(a[i]%a[j]==0 && dp[i]<1+dp[j])
               {
                   dp[i] = 1+dp[j];
                   if(mx<dp[i])mx=dp[i];
               }
           }
       }
       int prev=-1;
       vector<int> ans;
       for(int i=n-1;i>=0;i--)
       {
           if(dp[i]==mx && (prev%a[i]==0 || prev==-1))
           {
               ans.push_back(a[i]);
               mx-=1;
               prev = a[i];
           }
       }
       return ans;
    }
    
};
