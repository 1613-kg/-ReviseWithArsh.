class Solution {
public:

    void merge(vector<int> &nums,int s,int e)
    {
        int mid = s + (e-s)/2;

        int len1 = mid-s+1;
        int len2 = e-mid;
        int ind=s;
        vector<int> first(len1+1),second(len2+1);
        for(int i=0;i<len1;i++){
            first[i] = nums[ind++];
        }
        ind=mid+1;
         for(int i=0;i<len2;i++){
            second[i] = nums[ind++];
        }
        int i=0,j=0;
        ind=s;
        while(i<len1 && j<len2){
            if(first[i]<second[j]){
                nums[ind++] = first[i];
                i++;
            }
            else if(first[i]>second[j]){
                nums[ind++] = second[j];
                j++;
            }
            else{
                nums[ind++] = first[i];
                nums[ind++] = second[j];
                i++;
                j++;
            }
        }
        while(i<len1){
            nums[ind++] = first[i++];
        }
        while(j<len2){
            nums[ind++] = second[j++];
        }
    }
 
    void divide(int s,int e,vector<int>& nums)
    {
        if(s>=e)return;
        int mid = s + (e-s)/2;

        divide(s,mid,nums);
        divide(mid+1,e,nums);
        merge(nums,s,e);
    }

    vector<int> sortArray(vector<int>& nums) {
        vector<int> ans(nums.size());
        divide(0,nums.size()-1,nums);
        return nums;
    }
};
