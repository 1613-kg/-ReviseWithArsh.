/**
 * // This is the MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * class MountainArray {
 *   public:
 *     int get(int index);
 *     int length();
 * };
 */

class Solution {
public:
    int findInMountainArray(int target, MountainArray &mr) {
        int n = mr.length();
        int i=0,j=n-1;
        int peak=0;
       // cout<<n<<endl;
        int ans=n+1;
        while(i<=j)
        {
            int mid = i + (j-i)/2;
            int x = mr.get(mid);
            int y = mr.get(mid+1);
            if(x>y){
                peak=mid;
                //if(x==target)return mid;
                j=mid-1;
            }
            else{
                  i=mid+1;
            }
        }
        //cout<<peak<<endl;
        i=0,j=peak;
        while(i<=j)
        {
            int mid = i + (j-i)/2;
            int x = mr.get(mid);

            if(x<target)i=mid+1;
            else if(x>target){
              j=mid-1;
            }
            else {
                ans = min(ans,mid);
                break;
            }
        }
         i=peak,j=n-1;
        while(i<=j)
        {
            int mid = i + (j-i)/2;
            int x = mr.get(mid);

            if(x>target)i=mid+1;
            else if(x<target)j=mid-1;
            else {
                ans = min(ans,mid);
                break;
            }
        }
        if(ans==n+1)return -1;
        return ans;
    }
};
