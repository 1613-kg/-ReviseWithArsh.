class Solution {
public:

   class data{
      public:
      int time;
      int amount;
      string name;
      string city;

      data(string n,string c,int t,int a){
          time=t;
          name=n;
          amount=a;
          city=c;
      }
   };

   static bool cmp(data* a,data* b){
         return a->name<b->name;
   }
    vector<string> invalidTransactions(vector<string>& transactions) {
        vector<data*> v;
        for(int i=0;i<transactions.size();i++)
        {
            string temp = transactions[i];
            int f=0;
            string name="",city="",time="",amount="";
            for(int j=0;j<temp.size();j++){
                if(f==0){
                    if(temp[j]!=',')name += temp[j];
                    else{
                        f=1;
                    }
                }
                else if(f==1){
                    if(temp[j]!=',')time += temp[j];
                    else{
                        f=2;
                    }
                }
                else if(f==2){
                      if(temp[j]!=',')amount += temp[j];
                    else{
                        f=3;
                    }
                }
                else{
                     if(temp[j]!=',')city += temp[j];
                    else{
                        f=4;
                    }
                }
            }
            data* obj = new data(name,city,stoi(time),stoi(amount));
            v.push_back(obj);
        }
        vector<string> ans;
        vector<data*> t;
        sort(v.begin(),v.end(),cmp);
        for(int i=0;i<v.size();i++){
            data* temp = v[i];
            if(temp->amount>1000){
                t.push_back(temp);
                continue;
            }
            for(int j=0;j<v.size();j++){
                if(i!=j && temp->name==v[j]->name && abs(temp->time-v[j]->time)<=60 && temp->city!=v[j]->city){
                    t.push_back(temp);
                    break;
                }
            }
        }
        
        for(auto &x:t){
            string res = x->name + "," + to_string(x->time) + "," + to_string(x->amount) + "," + x->city;
            ans.push_back(res);
            //cout<<x->name<<" "<<x->time<<" "<<x->amount<<" "<<x->city<<endl;
        }
        return ans;
    }
};
